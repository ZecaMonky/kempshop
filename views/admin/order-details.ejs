<%- contentFor('body') %>
<div class="container-fluid">
    <div class="d-flex justify-content-between align-items-center mb-4">
        <h1>Детали заказа #<%= order.id %></h1>
        <a href="/admin/orders" class="btn btn-secondary">Назад к списку</a>
    </div>

    <div class="row">
        <div class="col-md-6">
            <div class="card mb-4">
                <div class="card-header">
                    <h5 class="card-title mb-0">Информация о заказе</h5>
                </div>
                <div class="card-body">
                    <p><strong>Дата заказа:</strong> <%= new Date(order.created_at).toLocaleString() %></p>
                    <p><strong>Статус:</strong> 
                        <% const statuses = {
                            'pending': 'Ожидает обработки',
                            'processing': 'В обработке',
                            'shipped': 'Отправлен',
                            'delivered': 'Доставлен',
                            'cancelled': 'Отменен'
                        } %>
                        <%= statuses[order.status] %>
                    </p>
                    <p><strong>Сумма заказа:</strong> <%= order.total_price %> ₽</p>
                    <p><strong>Способ оплаты:</strong> <%= order.payment_method %></p>
                    <p><strong>Адрес доставки:</strong> <%= order.delivery_address %></p>
                    <% if (order.comment) { %>
                        <p><strong>Комментарий:</strong> <%= order.comment %></p>
                    <% } %>
                </div>
            </div>
        </div>

        <div class="col-md-6">
            <div class="card mb-4">
                <div class="card-header">
                    <h5 class="card-title mb-0">Информация о клиенте</h5>
                </div>
                <div class="card-body">
                    <p><strong>Имя:</strong> <%= order.firstName %> <%= order.lastName %></p>
                    <p><strong>Email:</strong> <%= order.email %></p>
                    <p><strong>Телефон:</strong> <%= order.phone %></p>
                </div>
            </div>
        </div>
    </div>

    <div class="card">
        <div class="card-header">
            <h5 class="card-title mb-0">Товары в заказе</h5>
        </div>
        <div class="card-body">
            <div class="table-responsive">
                <table class="table">
                    <thead>
                        <tr>
                            <th>Товар</th>
                            <th>Цена</th>
                            <th>Количество</th>
                            <th>Сумма</th>
                        </tr>
                    </thead>
                    <tbody>
                        <% orderItems.forEach(item => { %>
                            <tr>
                                <td><%= item.name %></td>
                                <td><%= item.price %> ₽</td>
                                <td><%= item.quantity %></td>
                                <td><%= item.price * item.quantity %> ₽</td>
                            </tr>
                        <% }); %>
                    </tbody>
                    <tfoot>
                        <tr>
                            <td colspan="3" class="text-end"><strong>Итого:</strong></td>
                            <td><strong><%= order.total_price %> ₽</strong></td>
                        </tr>
                    </tfoot>
                </table>
            </div>
        </div>
    </div>

    <div class="mt-4">
        <button class="btn btn-danger delete-order" data-order-id="<%= order.id %>">
            Удалить заказ
        </button>
    </div>
</div>

<script>
document.addEventListener('DOMContentLoaded', function() {
    const deleteButton = document.querySelector('.delete-order');
    if (deleteButton) {
        deleteButton.addEventListener('click', async function() {
            const orderId = this.dataset.orderId;

            const result = await Swal.fire({
                title: 'Подтверждение',
                text: 'Вы уверены, что хотите удалить этот заказ?',
                icon: 'warning',
                showCancelButton: true,
                confirmButtonText: 'Да, удалить',
                cancelButtonText: 'Отмена'
            });

            if (result.isConfirmed) {
                try {
                    const response = await fetch(`/admin/orders/${orderId}/delete`, {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json',
                        }
                    });

                    const data = await response.json();
                    
                    if (data.success) {
                        Swal.fire({
                            title: 'Успешно!',
                            text: 'Заказ успешно удален',
                            icon: 'success',
                            confirmButtonText: 'OK'
                        }).then(() => {
                            window.location.href = '/admin/orders';
                        });
                    } else {
                        throw new Error(data.error);
                    }
                } catch (error) {
                    console.error('Ошибка:', error);
                    Swal.fire({
                        title: 'Ошибка!',
                        text: 'Произошла ошибка при удалении заказа',
                        icon: 'error',
                        confirmButtonText: 'OK'
                    });
                }
            }
        });
    }
});
</script> 