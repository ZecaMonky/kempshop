<%- contentFor('body') %>
<div class="container-fluid">
    <h1 class="mb-4">Управление заказами</h1>

    <div class="card">
        <div class="card-body">
            <div class="table-responsive">
                <table class="table">
                    <thead>
                        <tr>
                            <th>ID</th>
                            <th>Дата</th>
                            <th>Клиент</th>
                            <th>Сумма</th>
                            <th>Статус</th>
                            <th>Действия</th>
                        </tr>
                    </thead>
                    <tbody>
                        <% console.log('Orders:', orders); %>
                        <% if (orders && orders.length > 0) { %>
                            <% orders.forEach(order => { %>
                                <% console.log('Processing order:', order); %>
                                <tr>
                                    <td>#<%= order.id %></td>
                                    <td><%= new Date(order.created_at).toLocaleDateString() %></td>
                                    <td><%= order.firstName %> <%= order.lastName %></td>
                                    <td><%= order.total_price %> ₽</td>
                                    <td>
                                        <select class="form-select status-select" data-order-id="<%= order.id %>">
                                            <option value="pending" <%= order.status === 'pending' ? 'selected' : '' %>>Ожидает обработки</option>
                                            <option value="processing" <%= order.status === 'processing' ? 'selected' : '' %>>В обработке</option>
                                            <option value="shipped" <%= order.status === 'shipped' ? 'selected' : '' %>>Отправлен</option>
                                            <option value="delivered" <%= order.status === 'delivered' ? 'selected' : '' %>>Доставлен</option>
                                            <option value="cancelled" <%= order.status === 'cancelled' ? 'selected' : '' %>>Отменен</option>
                                        </select>
                                    </td>
                                    <td>
                                        <div class="btn-group">
                                            <a href="/admin/orders/<%= order.id %>" class="btn btn-info">Подробнее</a>
                                            <button class="btn btn-danger delete-order" data-order-id="<%= order.id %>">Удалить</button>
                                        </div>
                                    </td>
                                </tr>
                            <% }); %>
                        <% } else { %>
                            <tr>
                                <td colspan="6" class="text-center">Нет заказов</td>
                            </tr>
                        <% } %>
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</div>

<script>
document.addEventListener('DOMContentLoaded', function() {
    // Обработка изменения статуса
    document.querySelectorAll('.status-select').forEach(select => {
        select.addEventListener('change', async function() {
            const orderId = this.dataset.orderId;
            const newStatus = this.value;

            try {
                const response = await fetch(`/admin/orders/${orderId}/status`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify({ status: newStatus })
                });

                const result = await response.json();
                
                if (result.success) {
                    Swal.fire({
                        title: 'Успешно!',
                        text: 'Статус заказа обновлен',
                        icon: 'success',
                        confirmButtonText: 'OK'
                    });
                } else {
                    throw new Error(result.error);
                }
            } catch (error) {
                console.error('Ошибка:', error);
                Swal.fire({
                    title: 'Ошибка!',
                    text: 'Произошла ошибка при обновлении статуса',
                    icon: 'error',
                    confirmButtonText: 'OK'
                });
            }
        });
    });

    // Обработка удаления заказа
    document.querySelectorAll('.delete-order').forEach(button => {
        button.addEventListener('click', async function() {
            const orderId = this.dataset.orderId;

            const result = await Swal.fire({
                title: 'Подтверждение',
                text: 'Вы уверены, что хотите удалить этот заказ?',
                icon: 'warning',
                showCancelButton: true,
                confirmButtonText: 'Да, удалить',
                cancelButtonText: 'Отмена'
            });

            if (result.isConfirmed) {
                try {
                    const response = await fetch(`/admin/orders/${orderId}/delete`, {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json',
                        }
                    });

                    const data = await response.json();
                    
                    if (data.success) {
                        Swal.fire({
                            title: 'Успешно!',
                            text: 'Заказ успешно удален',
                            icon: 'success',
                            confirmButtonText: 'OK'
                        }).then(() => {
                            // Перезагружаем страницу после удаления
                            window.location.reload();
                        });
                    } else {
                        throw new Error(data.error);
                    }
                } catch (error) {
                    console.error('Ошибка:', error);
                    Swal.fire({
                        title: 'Ошибка!',
                        text: 'Произошла ошибка при удалении заказа',
                        icon: 'error',
                        confirmButtonText: 'OK'
                    });
                }
            }
        });
    });
});
</script>

<style>
    .btn-group {
        display: flex !important;
        gap: 10px;
        white-space: nowrap;
    }
    
    .btn {
        display: inline-block !important;
        padding: 5px 10px !important;
        border: 1px solid #ccc !important;
        border-radius: 4px !important;
        text-decoration: none !important;
        cursor: pointer;
        min-width: 80px;
    }
    
    .btn-info {
        background-color: #17a2b8 !important;
        color: white !important;
        border-color: #17a2b8 !important;
    }
    
    .btn-danger {
        background-color: #dc3545 !important;
        color: white !important;
        border-color: #dc3545 !important;
    }

    .btn:hover {
        opacity: 0.9;
    }

    .table td {
        vertical-align: middle;
    }
</style> 